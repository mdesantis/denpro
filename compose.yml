# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

services:
  cdy:
    image: caddy
    restart: unless-stopped
    ports:
      - 8080:8080
      # - 443:443
      # - 443:443/udp
    volumes:
      - ./.compose/volumes/cdy/Caddyfile:/etc/caddy/Caddyfile:ro
      - rls_public:/srv/public:ro
      - rls_storage:/srv/storage:ro
      - cdy_data:/data
      - cdy_config:/config
  pgq:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - pgq_password
    volumes:
      - pgq_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=denpro
      - POSTGRES_PASSWORD_FILE=/run/secrets/pgq_password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "denpro"]
      interval: 10s
      timeout: 5s
      retries: 3
  rls:
    build: .
    depends_on:
      pgq:
        condition: service_healthy
    secrets:
      - pgq_password
      - rls_credentials
    environment:
      - DENPRO_DATABASE_HOST=pgq
      - DENPRO_DATABASE_PASSWORD_FILE=/run/secrets/pgq_password
      - RAILS_DO_NOT_FORCE_SSL=true
      - RAILS_CREDENTIALS_KEY_FILE=/run/secrets/rls_credentials
    command: ["./bin/rails", "server"]
    ports:
      - 3000:3000
    expose:
      - 3000
    healthcheck:
      test: ["CMD", "curl", "--request", "HEAD", "--silent", "--fail", "http://localhost:3000/up"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - rls_public:/rails/public
      - rls_storage:/rails/storage
volumes:
  cdy_data:
  cdy_config:
  pgq_data:
  rls_public:
  rls_storage:
secrets:
  pgq_password:
    file: .compose/secrets/pgq-password.txt
  rls_credentials:
    file: config/credentials/production.key
